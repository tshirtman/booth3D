#:import Image kivy.uix.image.Image
#:import Video kivy.uix.video.Video
#:import glob glob.glob
#:import FXAAEffect kivy.uix.effectwidget.FXAAEffect
#:import HorizontalBlurEffect kivy.uix.effectwidget.HorizontalBlurEffect
#:import VerticalBlurEffect kivy.uix.effectwidget.VerticalBlurEffect
#:import C kivy.utils.get_color_from_hex

FloatLayout:
    ParticleSystem:
        id: particle
        pos_hint: {'pos': (.5, .5)}
        config: 'data/%splosion.pex' % ('ex' if app.display_container else 'im')
        on_config:
            print self.config
            self.stop()
            self._parse_config(self.config)
            self.start()

    Container:
        id: container
        pos_x: .5
        pos_y: -1
        pos_hint: {'center': (self.pos_x, self.pos_y)}
    Label:
        text: 'angle: %s\nangle: %s\ntours: %s,\nindex: %s' % (round(app.angle * 360, 2), round((app.angle % 1) * 360, 2), app.turn_count, container.ids.carousel.index)
        size_hint: None, None
        size: self.texture_size

<Container>:
    title_y_decal: -1
    carousel_y_decal: -2
    Image:
        id: base
        size: self.texture_size
        size_hint: None, None
        source: 'data/ARTWORK/container_state2.png'
        pos_hint: {'center_x': .62, 'center_y': .5}
        opacity: 0

    Image:
        id: content
        size: self.texture_size
        size_hint: None, None
        source: 'data/ARTWORK/container_state3_imagedisplay.png'
        right: base.right
        opacity: 0

    Image:
        source: 'data/ARTWORK/media_glass_container_vert.png'
        center_x: self.size and carousel.center_x
        y: carousel.y - 80
        color: C('C69C6D')

    TwizCarousel:
        id: carousel
        opacity: .5
        on_index: self.reset_flag()
        angle: app.angle
        angle_rotation_trigger: .1
        loop: True
        on_parent:
            for x in glob('data/media/*.jpg'): self.add_widget(Image(source=x))
            for x in glob('data/media/*.png'): self.add_widget(Image(source=x))
            #for x in glob('data/media/*.mov'): self.add_widget(Video(source=x))
        pos_hint: {'right': .9, 'center_y': .35 - root.carousel_y_decal}
        size_hint: None, None
        size: 450, 800

    #EffectWidget:
    #    effects: [HorizontalBlurEffect(), VerticalBlurEffect()]
        #background_color: 0, 0, 0, 0
    View:
        canvas.before:
            Color:
                rgba: 1, 1, 1, 1

        scene: 'data/potdecreme.obj'
        display_all: True
        #mode: 'lines'
        #cam_rotation: (app.data[-1][-3] if app.data else 0), -app.angle * 360, (app.data[-1][-2] * 360 if app.data else 0)
        cam_rotation: 10, -app.angle * 360, 0
        cam_translation: 0, -3, -9
        obj_scale: .6
        light_sources:
            {x: ([float(y) * 15 - 7.5 for y in bin(x)[2:].rjust(3, '0')] + [1.0]) for x in range(8)}

    ProgressiveLabel:
        id: title
        line_interval: 8
        opacity: root.title_y_decal + 1
        canvas.before:
            Color:
                rgba: 1, 1, 1, 1

        canvas.after:
            Color:
                rgba: C('C69C6D')[:3] + [.5]

            Line:
                points: self.x - 250, self.top - 5 - self.line_interval * 2, self.x - 10, self.top - 5 - self.line_interval * 2
                width: 2.3
                cap: 'none'

            Line:
                points: self.x - 250, self.top - 5 - self.line_interval, self.x - 10, self.top - 5 - self.line_interval
                width: 1.7
                cap: 'none'

            Line:
                points: self.x - 249, self.top - 5, self.x - 9, self.top - 5
                width: 1
                cap: 'none'

        target_text: app.titles_list[carousel.index] if carousel.index is not None and carousel.index <= len(app.titles_list) else ' '
        size_hint: None, None
        size: self.texture_size
        pos_hint: {'x': .655 + root.title_y_decal, 'y': .780}
        font_name: 'data/MyriadPro-Regular.otf'
        font_size: '40sp'
        interval: .05
        color: C('C69C6D')
