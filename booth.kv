#:import Image kivy.uix.image.Image
#:import Video kivy.uix.video.Video
#:import glob glob.glob
#:import FXAAEffect kivy.uix.effectwidget.FXAAEffect
#:import HorizontalBlurEffect kivy.uix.effectwidget.HorizontalBlurEffect
#:import VerticalBlurEffect kivy.uix.effectwidget.VerticalBlurEffect

FloatLayout:
    ParticleSystem:
        id: particle
        pos_hint: {'pos': (.5, .5)}
        config: 'data/%splosion.pex' % ('ex' if app.display_container else 'im')
        on_config:
            print self.config
            self.stop()
            self._parse_config(self.config)
            self.start()

    Container:
        id: container
        pos_x: .5
        pos_y: -1
        pos_hint: {'center': (self.pos_x, self.pos_y)}
    Label:
        text: 'angle: %s\nangle: %s\ntours: %s,\nindex: %s' % (round(app.angle * 360, 2), round((app.angle % 1) * 360, 2), app.turn_count, container.ids.carousel.index)
        size_hint: None, None
        size: self.texture_size

<Container>:
    Image:
        id: base
        size: self.texture_size
        size_hint: None, None
        source: 'data/ARTWORK/container_state2.png'
        pos_hint: {'center_x': .62, 'center_y': .5}
        opacity: 0

    Image:
        id: content
        size: self.texture_size
        size_hint: None, None
        source: 'data/ARTWORK/container_state3_imagedisplay.png'
        right: base.right
        opacity: 0

    TwizCarousel:
        id: carousel
        opacity: 0
        on_index: self.reset_flag()
        angle: app.angle
        angle_rotation_trigger: .1
        loop: True
        on_parent:
            for x in glob('data/media/*.jpg'): self.add_widget(Image(source=x))
            for x in glob('data/media/*.PNG'): self.add_widget(Image(source=x))
            #for x in glob('data/media/*.mov'): self.add_widget(Video(source=x))
        pos_hint: {'right': .8, 'center_y': .7}
        size_hint: None, None
        size: 500, 400

    EffectWidget:
        effects: [HorizontalBlurEffect(), VerticalBlurEffect()]
        background_color: 0, 0, 0, 0
        View:
            canvas.before:
                Color:
                    rgba: 1, 1, 1, 1

            scene: 'data/bouteillejuana2.obj'
            display_all: True
            #mode: 'lines'
            #cam_rotation: (app.data[-1][-3] if app.data else 0), -app.angle * 360, (app.data[-1][-2] * 360 if app.data else 0)
            cam_rotation: 0, -app.angle * 360, 0
            cam_translation: 0, -3, -9
            obj_scale: 3
            light_sources:
                {x: ([float(y) * 15 for y in bin(x)[2:].rjust(3, '0')] + [1.0]) for x in range(8)}
